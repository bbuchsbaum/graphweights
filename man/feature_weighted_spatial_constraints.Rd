% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_constraints.R
\name{feature_weighted_spatial_constraints}
\alias{feature_weighted_spatial_constraints}
\title{Construct Feature-Weighted Spatial Constraints for Data Blocks}
\usage{
feature_weighted_spatial_constraints(
  coords,
  feature_mats,
  sigma_within = 5,
  sigma_between = 3,
  wsigma_within = 0.73,
  wsigma_between = 0.73,
  alpha_within = 0.5,
  alpha_between = 0.5,
  shrinkage_factor = 0.1,
  nnk_within = 27,
  nnk_between = 27,
  maxk_within = nnk_within,
  maxk_between = nnk_between,
  weight_mode_within = "heat",
  weight_mode_between = "binary",
  variable_weights = rep(1, ncol(coords) * length(feature_mats)),
  verbose = FALSE
)
}
\arguments{
\item{coords}{Matrix of spatial coordinates:
* Rows: Data points
* Columns: Spatial dimensions (e.g., x, y, z)}

\item{feature_mats}{List of feature matrices:
* Each matrix contains features for one block
* Rows correspond to spatial coordinates}

\item{sigma_within}{Numeric spatial bandwidth within blocks (default: 5)
* Controls spatial smoothing within blocks}

\item{sigma_between}{Numeric spatial bandwidth between blocks (default: 3)
* Controls spatial connections between blocks}

\item{wsigma_within}{Numeric feature bandwidth within blocks (default: 0.73)
* Controls feature similarity sensitivity within blocks}

\item{wsigma_between}{Numeric feature bandwidth between blocks (default: 0.73)
* Controls feature similarity sensitivity between blocks}

\item{alpha_within}{Numeric between 0 and 1 (default: 0.5)
* 0: Only spatial information within blocks
* 1: Only feature information within blocks}

\item{alpha_between}{Numeric between 0 and 1 (default: 0.5)
* 0: Only spatial information between blocks
* 1: Only feature information between blocks}

\item{shrinkage_factor}{Numeric between 0 and 1 (default: 0.1)
* Controls balance between within/between block constraints}

\item{nnk_within}{Integer maximum neighbors within blocks (default: 27)}

\item{nnk_between}{Integer maximum neighbors between blocks (default: 27)}

\item{maxk_within}{Integer maximum neighbors for feature computation (default: nnk_within)}

\item{maxk_between}{Integer maximum neighbors for feature computation (default: nnk_between)}

\item{weight_mode_within}{Character weight type within blocks (default: "heat")}

\item{weight_mode_between}{Character weight type between blocks (default: "binary")}

\item{variable_weights}{Numeric vector of weights per variable (default: ones)}

\item{verbose}{Logical for progress messages (default: FALSE)}
}
\value{
A sparse Matrix object representing feature-weighted spatial constraints where:
  * Values represent combined spatial-feature relationships
  * Matrix is normalized by its largest eigenvalue
}
\description{
Creates a sparse matrix of spatial constraints that incorporates both spatial proximity
and feature similarity between data points. This is particularly useful when both
spatial location and feature characteristics are important for defining relationships
between data points.
}
\details{
The function combines spatial and feature information by:
1. Computing spatial relationships using coordinate information
2. Computing feature similarities using provided feature matrices
3. Combining spatial and feature information using scaling parameters
4. Balancing within and between-block relationships

Feature weighting is controlled by:
* wsigma parameters: Control the sensitivity to feature differences
* alpha parameters: Balance between spatial and feature information

Common applications include:
* Image segmentation with multiple channels
* Multi-modal neuroimaging analysis
* Spatial-temporal data analysis
* Pattern recognition in spatial data
}
\examples{
# Example 1: Image segmentation with RGB channels
coords <- expand.grid(x = 1:10, y = 1:10)
# Create random RGB values for each pixel
features <- matrix(runif(100 * 3), 100, 3)
S <- feature_weighted_spatial_constraints(
  as.matrix(coords),
  list(features),
  sigma_within = 2,
  wsigma_within = 0.5,
  alpha_within = 0.3
)

# Example 2: Multi-modal analysis
coords <- expand.grid(x = 1:5, y = 1:5)
features1 <- matrix(rnorm(25 * 4), 25, 4)  # First modality
features2 <- matrix(rnorm(25 * 3), 25, 3)  # Second modality
S <- feature_weighted_spatial_constraints(
  as.matrix(coords),
  list(features1, features2),
  sigma_within = 2,
  sigma_between = 1,
  alpha_within = 0.4,
  alpha_between = 0.6
)

}
\seealso{
* \code{\link{spatial_constraints}} for purely spatial constraints
* \code{\link{neighbor_graph}} for graph construction
}
