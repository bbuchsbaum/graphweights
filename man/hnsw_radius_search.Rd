% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hnsw_utils.R
\name{hnsw_radius_search}
\alias{hnsw_radius_search}
\title{Perform Radius-based Search using HNSW}
\usage{
hnsw_radius_search(
  query_points,
  reference_points,
  radius,
  max_neighbors = 100,
  ef = 100,
  M = 16,
  distance = "l2"
)
}
\arguments{
\item{query_points}{Matrix of query points where each row is a point}

\item{reference_points}{Matrix of reference points where each row is a point}

\item{radius}{The radius within which to find neighbors (in the same units as the distance metric)}

\item{max_neighbors}{Maximum number of neighbors to consider (like max_neighbour in rflann)}

\item{ef}{Search parameter that controls speed/accuracy trade-off (default: 100)}

\item{M}{Parameter that controls index size/speed trade-off (default: 16)}

\item{distance}{Distance metric to use: "l2" (squared Euclidean), "euclidean", "cosine", or "ip" (inner product)}
}
\value{
A list with two components:
  \item{indices}{A list where each element contains indices of neighbors within radius}
  \item{distances}{A list where each element contains distances to neighbors within radius}
}
\description{
This function emulates radius-based search using HNSW's k-nearest neighbors search.
It first finds k nearest neighbors, then filters them based on the radius threshold.
}
